package com.coderabhishek.blog.config;

import com.mongodb.ConnectionString;
import com.mongodb.MongoClientSettings;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoClient;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.mongodb.config.AbstractMongoClientConfiguration;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper;
import org.springframework.data.mongodb.core.convert.MappingMongoConverter;
import org.springframework.data.mongodb.core.convert.MongoCustomConversions;
import org.springframework.data.mongodb.core.mapping.MongoMappingContext;

@Configuration
public class MongoConfig extends AbstractMongoClientConfiguration {

    @Override
    protected String getDatabaseName() {
        return "blog"; // Replace with your database name
    }

    @Override
    public MongoClient mongoClient() {
        ConnectionString connectionString = new ConnectionString("mongodb://localhost:27017/blog");
        return MongoClients.create(
            MongoClientSettings.builder()
                .applyConnectionString(connectionString)
                .build()
        );
    }

    @Override
    protected void configureConverters(MongoCustomConversions.MongoConverterConfigurationAdapter adapter) {
        adapter.registerConverter(new DefaultMongoTypeMapper(null));
    }

    @Bean
    public MongoTemplate mongoTemplate(MongoClient mongoClient, MongoMappingContext context, MappingMongoConverter converter) {
        converter.setTypeMapper(new DefaultMongoTypeMapper(null)); // Removes the _class field
        return new MongoTemplate(mongoClient, getDatabaseName(), converter);
    }
}
