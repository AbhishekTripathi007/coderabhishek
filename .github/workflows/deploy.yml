name: Build and Push to Docker Hub

on:
  push:
    branches:
      - main  # Change if needed

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # You can change this to match your JDK version
          java-version: '21'

      - name: Build with Maven
        run: |
          cd Backend/coderabhishek
          mvn clean package -DskipTests  # Skip tests for faster builds, remove if you want tests to run

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Build & Push Services to Docker Hub
        run: |
          cd Backend/coderabhishek
          docker compose build

          docker images  # Debugging step to list built images

          docker tag react-frontend:1.0 ${{ secrets.DOCKER_USERNAME }}/coderabhishek:react-frontend
          docker tag eureka:1.0 ${{ secrets.DOCKER_USERNAME }}/coderabhishek:eureka
          docker tag gateway:1.0 ${{ secrets.DOCKER_USERNAME }}/coderabhishek:gateway
          docker tag auth:1.0 ${{ secrets.DOCKER_USERNAME }}/coderabhishek:auth
          docker tag blog:1.0 ${{ secrets.DOCKER_USERNAME }}/coderabhishek:blog

          docker push ${{ secrets.DOCKER_USERNAME }}/coderabhishek:react-frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/coderabhishek:eureka
          docker push ${{ secrets.DOCKER_USERNAME }}/coderabhishek:gateway
          docker push ${{ secrets.DOCKER_USERNAME }}/coderabhishek:auth
          docker push ${{ secrets.DOCKER_USERNAME }}/coderabhishek:blog

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Login to Docker Hub
            echo "üîë Logging in to Docker Hub..."
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Define all services with their ports
            declare -A services=(
              ["eureka"]="8761"
              ["gateway"]="8080"
              ["auth"]="8081"
              ["blog"]="8082"
              ["react-frontend"]="80"
            )

            echo "üöÄ Pulling latest Docker images..."
            for service in "${!services[@]}"; do
              echo "Pulling image: gorakshdocker/coderabhishek:$service"
              docker pull gorakshdocker/coderabhishek:$service
            done

            echo "üõë Stopping and removing existing containers..."
            for service in "${!services[@]}"; do
              docker ps -q --filter "name=$service" | grep -q . && docker stop $service
              docker ps -aq --filter "name=$service" | grep -q . && docker rm $service
            done

            echo "üåê Ensuring the Docker network exists..."
            docker network inspect mynetwork >/dev/null 2>&1 || docker network create mynetwork

            # Ensure MONGO_URI is set
            export MONGO_URI="${{ secrets.MONGO_URI }}"
            echo "MONGO_URI is set to: $MONGO_URI"

            if [[ -z "$MONGO_URI" ]]; then
              echo "‚ùå ERROR: MONGO_URI is not set. Aborting deployment!"
              exit 1
            fi

            echo "üöÄ Running new containers..."
            for service in "${!services[@]}"; do
              echo "Starting $service on port ${services[$service]}..."
              
              # Base command
              cmd=(docker run -d --restart unless-stopped --name "$service"
                  --network mynetwork -p "${services[$service]}:${services[$service]}")
              
              # Add MONGO_URI only for blog and auth services
              if [[ "$service" == "blog" || "$service" == "auth" ]]; then
                cmd+=(-e "MONGO_URI=$MONGO_URI")
              fi

              # Append the image
              cmd+=("gorakshdocker/coderabhishek:$service")

              # Debugging output
              echo "Running: ${cmd[*]}"

              # Run the command
              "${cmd[@]}"
            done

            echo "‚úÖ Deployment completed successfully!"
